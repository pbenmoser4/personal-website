{"version":3,"sources":["files/pbm_icon.png","data.js","actions/index.js","actions/types.js","components/Header.js","components/shared/SectionHero.js","components/Home.js","components/Personal.js","components/Resume/Resume.js","components/Contact.js","history.js","components/App.js","reducers/index.js","reducers/experienceReducer.js","reducers/skillsReducer.js","reducers/appSectionsReducer.js","index.js"],"names":["module","exports","experience","skills","appSections","fetchAppSections","dispatch","a","async","type","payload","fetchAppSection","section","fetchedSection","Header","state","menuActive","componentDidMount","props","onBurgerClick","event","current","setState","renderBurger","role","aria-label","className","aria-expanded","data-target","onClick","Object","keys","map","key","aria-hidden","renderNavbarMenuLinks","sections","k","to","renderNavbarMenu","renderNavbarBrand","src","require","alt","render","id","React","Component","connect","withRouter","SectionHero","color","title","subtitle","Home","renderSectionHero","this","Personal","Resume","fetchResumeSkills","fetchResumeExperience","Contact","createBrowserHistory","App","history","path","exact","component","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","document","querySelector"],"mappings":"kJAAAA,EAAOC,QAAU,IAA0B,sC,2KCA9BC,EAAa,CACxB,CACE,GAAM,EACN,KAAQ,WACR,SAAY,sCACZ,SAAY,eACZ,MAAS,wBACT,QAAW,CACT,4EACA,2HACA,iEACA,gHACA,oHAGJ,CACE,GAAM,EACN,KAAQ,YACR,SAAY,kCACZ,SAAY,mBACZ,MAAS,4BACT,QAAW,CACT,0HACA,0FACA,kEAGJ,CACE,GAAK,EACL,KAAQ,YACR,SAAY,sDACZ,SAAY,mBACZ,MAAS,8BACT,QAAW,CACT,2FACA,+FACA,8EACA,6GACA,6FAGJ,CACE,GAAK,EACL,KAAQ,aACR,SAAY,kBACZ,SAAY,kBACZ,MAAS,6BACT,QAAW,CACT,qFACA,4EACA,yFAGJ,CACE,GAAM,EACN,KAAQ,gBACR,SAAY,uBACZ,SAAY,mBACZ,MAAS,8BACT,QAAW,CACT,8FAKOC,EAAS,CACpB,CACE,GAAM,EACN,KAAQ,wBACR,KAAQ,CAAC,kBAAmB,uBAAwB,cAEtD,CACE,GAAM,EACN,KAAQ,qBACR,KAAQ,CAAC,4BAA6B,oBAAqB,gBAAiB,kBAAmB,iBAEjG,CACE,GAAM,EACN,KAAQ,sBACR,KAAQ,CAAC,mBAAoB,kBAAmB,0BAA2B,aAE7E,CACE,GAAM,EACN,KAAQ,qBACR,KAAQ,CAAC,SAAU,OAAQ,aAAc,UAAW,WAAY,UAElE,CACE,GAAM,EACN,KAAQ,iBACR,KAAQ,CAAC,qBAAsB,yBAA0B,UAAW,SAAU,qCAAsC,UAI3GC,EAAc,CACzB,KAAQ,CACN,KAAQ,IACR,KAAQ,eACR,MAAS,QAEX,OAAU,CACR,KAAQ,UACR,KAAQ,UACR,MAAS,WAEX,SAAY,CACV,KAAQ,YACR,KAAQ,WACR,MAAS,YCpFAC,EAAmB,kBAAM,SAAMC,GAAN,SAAAC,EAAAC,OAAA,gDACpCF,EAAS,CACPG,KCtB8B,qBDuB9BC,QAASN,IAHyB,uCAOzBO,EAAkB,SAAAC,GAAO,OAAI,SAAMN,GAAN,eAAAC,EAAAC,OAAA,gDAClCK,EAAiBT,EAAYQ,GACnCN,EAAS,CACPG,KC7B6B,oBD8B7BC,QAAQ,eAAGE,EAAUC,KAJiB,uC,QExBpCC,E,2MACJC,MAAQ,CACNC,YAAY,G,EAGdC,kBAAoB,WAClB,EAAKC,MAAMb,oB,EAGbc,cAAgB,SAACC,GACf,IAAMC,EAAU,EAAKN,MAAMC,WAC3B,EAAKM,SAAS,CAACN,YAAaK,K,EAG9BE,aAAe,WACb,OAAI,EAAKL,MAAMd,YAEX,yBAAKoB,KAAK,SAASC,aAAW,OAC5BC,UAAS,+BAA0B,EAAKX,MAAMC,WAAa,YAAa,IACxEW,gBAAc,QAAQC,cAAY,gBAClCC,QAAS,EAAKV,eACbW,OAAOC,KAAK,EAAKb,MAAMd,aAAa4B,KAAI,SAAAC,GAAG,OAAI,0BAAMA,IAAKA,EAAKC,cAAY,aAIzE,4C,EAIXC,sBAAwB,WACtB,GAAI,EAAKjB,MAAMd,YAAa,CAC1B,IAAMgC,EAAW,EAAKlB,MAAMd,YAC5B,OACE0B,OAAOC,KAAKK,GAAUJ,KAAI,SAAAK,GAAC,OACzB,kBAAC,IAAD,CAAMC,GAAIF,EAASC,GAAT,KAAqBX,UAAU,cAAcO,IAAKI,GAC1D,0BAAMX,UAAS,wBAAmBU,EAASC,GAAT,QAChC,uBAAGX,UAAS,gBAAWU,EAASC,GAAT,SAEzB,8BAAOA,OAKb,OAAO,4C,EAIXE,iBAAmB,WACjB,OACE,yBAAKb,UAAS,sBAAiB,EAAKX,MAAMC,WAAa,YAAa,KAClE,yBAAKU,UAAU,gBACZ,EAAKS,yBAER,yBAAKT,UAAU,cACb,yBAAKA,UAAU,eACb,0BAAMA,UAAU,wBACd,uBAAGA,UAAU,sBAEf,6C,EAOVc,kBAAoB,WAClB,OACE,yBAAKd,UAAU,gBACb,kBAAC,IAAD,CAAMY,GAAG,IAAIZ,UAAU,eACrB,yBAAKe,IAAKC,EAAQ,IAA0BC,IAAI,UAElD,yBAAKjB,UAAU,eAAf,oBACC,EAAKH,iB,EAKZqB,OAAS,WACP,OACE,yBAAKlB,UAAU,iCAAiCmB,GAAG,UACjD,yBAAKnB,UAAU,aACZ,EAAKc,oBACL,EAAKD,sB,6BAlFKO,IAAMC,WA+FZC,eANS,SAAAjC,GACtB,MAAQ,CACNX,YAAaW,EAAMX,eAMrB,CACEC,oBAHW2C,CAKbC,YAAWnC,ICvFEoC,EAjBK,SAAAhC,GAClB,OACI,6BAASQ,UAAS,eAAUR,EAAMiC,MAAN,aAAoBjC,EAAMiC,OAAU,KAC9D,yBAAKzB,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SACXR,EAAMkC,OAET,wBAAI1B,UAAU,YACXR,EAAMmC,cCJfC,E,2MAKJC,kBAAoB,WAClB,GAAI,EAAKrC,MAAMN,QAAS,CACtB,IAAMA,EAAU,EAAKM,MAAMN,QAC3B,OAAO,kBAAC,EAAD,CAAauC,MAAOvC,EAAQuC,MACjCC,MAAM,gBACNC,SAAS,6CAGX,OAAO,4C,mFAXTG,KAAKtC,MAAMP,gBAAgB,U,+BAgB3B,OACE,yBAAKe,UAAU,aACZ8B,KAAKD,oBACN,6BAAS7B,UAAU,WACjB,yBAAKA,UAAU,qBACb,uBAAGA,UAAU,YAAb,kHAIA,sU,GA3BOqB,aA+CJC,eANS,SAAAjC,GACtB,MAAQ,CACNH,QAASG,EAAMX,YAAN,QAMX,CACEO,mBAHWqC,CAKbM,GCnDaG,EANE,WACf,OACE,0CCKEC,E,2MACJzC,kBAAoB,WAClB,EAAKC,MAAMyC,oBACX,EAAKzC,MAAM0C,wBACX,EAAK1C,MAAMP,gBAAgB,W,mFAI3B,GAAI6C,KAAKtC,MAAMN,QAAS,CACtB,IAAMA,EAAU4C,KAAKtC,MAAMN,QAC3B,OAAO,kBAAC,EAAD,CAAauC,MAAOvC,EAAQuC,MACjCC,MAAM,UACNC,SAAS,wCAGX,OAAO,6C,+BAKT,OACE,6BACGG,KAAKD,oBADR,c,GArBeR,aAqCNC,eARS,SAAAjC,GACtB,MAAO,CACLb,WAAYa,EAAMb,WAClBC,OAAQY,EAAMZ,OACdS,QAASG,EAAMX,YAAN,UAMX,CAACwD,sBNvCkC,kBAAM,SAAMtD,GAAN,SAAAC,EAAAC,OAAA,gDACzCF,EAAS,CACPG,KCVmC,0BDWnCC,QAASR,IAH8B,uCMuCjByD,kBNhCO,kBAAM,SAAMrD,GAAN,SAAAC,EAAAC,OAAA,gDACrCF,EAAS,CACPG,KClB+B,sBDmB/BC,QAASP,IAH0B,uCMgCMQ,mBAF9BqC,CAGbU,GCzCaG,EANC,SAAC3C,GACf,OACE,yC,OCHW4C,gBCYTC,E,iLAGF,OACE,yBAAKrC,UAAU,YAAYmB,GAAG,YAC5B,kBAAC,IAAD,CAAQmB,QAASA,GACf,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWb,IACjC,kBAAC,IAAD,CAAOW,KAAK,YAAYC,OAAK,EAACC,UAAWV,IACzC,kBAAC,IAAD,CAAOQ,KAAK,UAAUC,OAAK,EAACC,UAAWT,IACvC,kBAAC,IAAD,CAAOO,KAAK,WAAWC,OAAK,EAACC,UAAWN,W,GAXlCd,aAyBHC,eANS,SAAAjC,GACtB,MAAQ,CACNX,YAAaW,EAAMX,eAKJ,CAACC,oBADL2C,CAEbe,G,QClCaK,cAAgB,CAC7BlE,WCHa,WAA2B,IAA1Ba,EAAyB,uDAAjB,KAAMsD,EAAW,uCACvC,OAAOA,EAAO5D,MACZ,IVLmC,0BUOjC,OAAO4D,EAAO3D,QAChB,QACE,OAAOK,IDFXZ,OEJa,WAA2B,IAA1BY,EAAyB,uDAAjB,KAAMsD,EAAW,uCACvC,OAAOA,EAAO5D,MACZ,IXN+B,sBWQ7B,OAAO4D,EAAO3D,QAChB,QACE,OAAOK,IFDXX,YGJa,WAAyB,IAAxBW,EAAuB,uDAAf,GAAIsD,EAAW,uCACrC,OAAOA,EAAO5D,MACZ,IZJ8B,qBYK5B,OAAO4D,EAAO3D,QAChB,IZL6B,oBYM3B,OAAO,eAAIK,EAAX,GAAqBsD,EAAO3D,SAC9B,QACE,OAAOK,MCHPuD,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YACZC,EACAN,EAAiBO,YAAgBC,OAGnCC,IAASnC,OACP,kBAAC,IAAD,CAAU8B,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,cAAc,Y","file":"static/js/main.58d59e5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pbm_icon.55dacd5b.png\";","export const experience = [\n  {\n    \"id\": 1,\n    \"name\": \"Collibra\",\n    \"position\": \"Product Manager, Smart Data Catalog\",\n    \"location\": \"New York, NY\",\n    \"dates\": \"August 2018 - Present\",\n    \"details\": [\n      \"First 100 Days: Delivered new Catalog UX to improve dataset understanding\",\n      \"First Year: Led development and release of Automatic Data Classification, Collibra’s first machine-learning product\",\n      \"SME for machine learning and open metadata tools and standards\",\n      \"Gave highest audience-rated presentation at Data Citizens ’19 (Collibra Conference) to crowd of hundreds\",\n      \"Served as product expert for marketing team, leading user groups, presenting webinars, onboarding new employees\"\n    ]\n  },\n  {\n    \"id\": 2,\n    \"name\": \"CloudMine\",\n    \"position\": \"Director of Integrated Strategy\",\n    \"location\": \"Philadelphia, PA\",\n    \"dates\": \"September 2017 - May 2018\",\n    \"details\": [\n      \"Developed detailed strategic overview of CloudMine’s competitive environment for sales, product, and executive use\",\n      \"Worked with engineering teams to execute on product roadmap in line with customer needs\",\n      \"Interfaced with industry experts as head of analyst relations\"\n    ]\n  },\n  {\n    \"id\":3,\n    \"name\": \"CloudMine\",\n    \"position\": \"Lead Solutions Engineer, Director of Client Success\",\n    \"location\": \"Philadelphia, PA\",\n    \"dates\": \"April 2015 - September 2017\",\n    \"details\": [\n      \"Managed team of Pre-Sales Engineers, Client Success, and Client Implementation Engineers\",\n      \"Closed over 65% of all new business, as well as two largest new clients in CloudMine history\",\n      \"Won two CODiE awards, most recently for Best Healthcare Technology Solution\",\n      \"Directed weekly product and strategy learning sessions to increase technical proficiency of the sales team\",\n      \"Developed data-based success measures for Client Success team to clarify team objectives\"\n    ]\n  },\n  {\n    \"id\":4,\n    \"name\": \"BUBL, Inc.\",\n    \"position\": \"Co-Founder, CTO\",\n    \"location\": \"Los Angeles, CA\",\n    \"dates\": \"December 2013 - April 2015\",\n    \"details\": [\n      \"Let product, UI/UX design, and engineering of Bubble: The Social Network That Pops\",\n      \"Started and led the Bubble engineering team; worked as full-time engineer\",\n      \"Created, refined, and pitched multiple investor presentations for seed round funding\"\n    ]\n  },\n  {\n    \"id\": 5,\n    \"name\": \"PeopleMetrics\",\n    \"position\": \"Application Engineer\",\n    \"location\": \"Philadelphia, PA\",\n    \"dates\": \"October 2012 - January 2014\",\n    \"details\": [\n      \"Leadership and oversight of multiple national and international market research projects\"\n    ]\n  }\n]\n\nexport const skills = [\n  {\n    \"id\": 1,\n    \"name\": \"Management Experience\",\n    \"data\": [\"Team Leadership\", \"Data-Driven Feedback\", \"Execution\"]\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Product Management\",\n    \"data\": [\"Machine Learning Projects\", \"Agile Development\", \"User Research\", \"Market Analysis\", \"UI/UX Design\"]\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Presentation Skills\",\n    \"data\": [\"Content Creation\", \"Publis Speaking\", \"Technical Demonstration\", \"Webinars\"]\n  },\n  {\n    \"id\": 4,\n    \"name\": \"Programming Skills\",\n    \"data\": [\"Python\", \"HTML\", \"Javascript\", \"node.js\", \"React.js\", \"Redux\"]\n  },\n  {\n    \"id\": 5,\n    \"name\": \"Compute Skills\",\n    \"data\": [\"Mac and Windows OS\", \"Microsoft Office Suite\", \"G Suite\", \"Sketch\", \"Atlassian Suite (Jira, Confluence)\", \"Aha!\"]\n  }\n]\n\nexport const appSections = {\n  \"Home\": {\n    \"path\": \"/\",\n    \"icon\": \"hand-spock-o\",\n    \"color\": \"info\",\n  },\n  \"Resume\": {\n    \"path\": \"/resume\",\n    \"icon\": \"diamond\",\n    \"color\": \"primary\",\n  },\n  \"Personal\": {\n    \"path\": \"/personal\",\n    \"icon\": \"id-badge\",\n    \"color\": \"warning\",\n  }\n}\n","import {\n  FETCH_RESUME_EXPERIENCE,\n  FETCH_RESUME_SKILLS,\n  FETCH_APP_SECTIONS,\n  FETCH_APP_SECTION\n} from './types';\n\nimport { skills, experience, appSections } from '../data';\n\nexport const fetchResumeExperience = () => async dispatch => {\n  dispatch({\n    type: FETCH_RESUME_EXPERIENCE,\n    payload: experience\n  });\n}\n\nexport const fetchResumeSkills = () => async dispatch => {\n  dispatch({\n    type: FETCH_RESUME_SKILLS,\n    payload: skills\n  });\n}\n\nexport const fetchAppSections = () => async dispatch => {\n  dispatch({\n    type: FETCH_APP_SECTIONS,\n    payload: appSections\n  });\n}\n\nexport const fetchAppSection = section => async dispatch => {\n  const fetchedSection = appSections[section];\n  dispatch({\n    type:FETCH_APP_SECTION,\n    payload: {[section]: fetchedSection}\n  });\n}\n","export const FETCH_RESUME_SKILLS = 'FETCH_RESUME_SKILLS';\nexport const FETCH_RESUME_EXPERIENCE = 'FETCH_RESUME_EXPERIENCE';\n\nexport const FETCH_APP_SECTIONS = 'FETCH_APP_SECTIONS';\nexport const FETCH_APP_SECTION = 'FETCH_APP_SECTION';\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchAppSections } from '../actions';\n\nclass Header extends React.Component{\n  state = {\n    menuActive: false\n  }\n\n  componentDidMount = () => {\n    this.props.fetchAppSections()\n  }\n\n  onBurgerClick = (event) => {\n    const current = this.state.menuActive;\n    this.setState({menuActive: !current});\n  }\n\n  renderBurger = () => {\n    if (this.props.appSections){\n      return (\n        <div role=\"button\" aria-label=\"menu\"\n          className={`navbar-burger burger ${this.state.menuActive ? \"is-active\": \"\"}`}\n          aria-expanded=\"false\" data-target=\"navbarOptions\"\n          onClick={this.onBurgerClick}>\n          {Object.keys(this.props.appSections).map(key => <span key={key} aria-hidden=\"true\"></span>)}\n        </div>\n      )\n    } else {\n      return <div>Loading...</div>\n    }\n  }\n\n  renderNavbarMenuLinks = () => {\n    if (this.props.appSections) {\n      const sections = this.props.appSections;\n      return (\n        Object.keys(sections).map(k => (\n          <Link to={sections[k][\"path\"]} className=\"navbar-item\" key={k}>\n            <span className={`icon has-text-${sections[k][\"color\"]}`}>\n              <i className={`fa fa-${sections[k][\"icon\"]}`}></i>\n            </span>\n            <span>{k}</span>\n          </Link>\n        ))\n      )\n    } else {\n      return <div>Loading...</div>\n    }\n  }\n\n  renderNavbarMenu = () => {\n    return (\n      <div className={`navbar-menu ${this.state.menuActive ? \"is-active\": \"\"}`}>\n        <div className=\"navbar-start\">\n          {this.renderNavbarMenuLinks()}\n        </div>\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <span className=\"icon has-text-danger\">\n              <i className=\"fa fa-envelope-o\"></i>\n            </span>\n            <span>Contact</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  renderNavbarBrand = () => {\n    return (\n      <div className=\"navbar-brand\">\n        <Link to=\"/\" className=\"navbar-item\">\n          <img src={require('../files/pbm_icon.png')} alt=\"logo\"/>\n        </Link>\n        <div className=\"navbar-item\">Ben Moser's Site</div>\n        {this.renderBurger()}\n      </div>\n    )\n  }\n\n  render = () => {\n    return (\n      <nav className=\"navbar is-fixed-top has-shadow\" id=\"navbar\">\n        <div className=\"container\">\n          {this.renderNavbarBrand()}\n          {this.renderNavbarMenu()}\n        </div>\n      </nav>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({\n    appSections: state.appSections\n  })\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchAppSections\n  }\n)(withRouter(Header));\n","import React from 'react';\n\nconst SectionHero = props => {\n  return (\n      <section className={`hero ${props.color ? `is-${props.color}` : \"\"}`}>\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">\n              {props.title}\n            </h1>\n            <h2 className=\"subtitle\">\n              {props.subtitle}\n            </h2>\n          </div>\n        </div>\n      </section>\n  )\n}\n\nexport default SectionHero;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchAppSection } from '../actions';\n\nimport SectionHero from './shared/SectionHero';\n\nclass Home extends Component {\n  componentDidMount() {\n    this.props.fetchAppSection(\"Home\");\n  }\n\n  renderSectionHero = () => {\n    if (this.props.section) {\n      const section = this.props.section;\n      return <SectionHero color={section.color}\n        title=\"Hello, World!\"\n        subtitle=\"Welcome to Ben Moser's personal website.\"\n      />\n    } else {\n      return <div>Loading...</div>\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.renderSectionHero()}\n        <section className=\"section\">\n          <div className=\"content is-medium\">\n            <p className=\"is-large\">\n              Hi there! I'm Ben Moser, and you've somehow found your way to my\n              personal website. Well done, whoever you are!\n            </p>\n            <p>\n              I'm using this site as a staging area for everything about me.\n              It's currently a work in progress, so bear with me, but for now\n              you can find some more information about me, my formal resume,\n              and if you're interested in reaching out for whatever reason, you\n              can get my contact info as well. \n            </p>\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({\n    section: state.appSections[\"Home\"]\n  })\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchAppSection\n  }\n)(Home);\n","import React from 'react';\n\nconst Personal = () => {\n  return (\n    <div>Personal</div>\n  )\n}\n\nexport default Personal;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ResumeExperience from './ResumeExperience';\nimport ResumeSkills from './ResumeSkills';\nimport SectionHero from '../shared/SectionHero';\n\nimport { fetchResumeExperience, fetchResumeSkills, fetchAppSection } from '../../actions';\n\nclass Resume extends Component{\n  componentDidMount = () => {\n    this.props.fetchResumeSkills();\n    this.props.fetchResumeExperience();\n    this.props.fetchAppSection(\"Resume\");\n  }\n\n  renderSectionHero() {\n    if (this.props.section) {\n      const section = this.props.section;\n      return <SectionHero color={section.color}\n        title=\"Resume!\"\n        subtitle='\"Wow, he sure has done a lot!\" -You'\n      />\n    } else {\n      return <div>Loading...</div>\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderSectionHero()}\n        Resume\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    experience: state.experience,\n    skills: state.skills,\n    section: state.appSections[\"Resume\"]\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {fetchResumeExperience, fetchResumeSkills, fetchAppSection}\n)(Resume);\n","import React from 'react';\n\nconst Contact = (props) => {\n  return (\n    <div>Contact</div>\n  )\n}\n\nexport default Contact;\n","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchAppSections } from '../actions';\n\nimport Header from './Header';\nimport Home from './Home';\nimport Personal from './Personal';\nimport Resume from './Resume/Resume';\nimport Contact from './Contact';\n\nimport history from '../history';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"container\" id=\"app-root\">\n        <Router history={history}>\n          <Header/>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/personal\" exact component={Personal} />\n            <Route path=\"/resume\" exact component={Resume} />\n            <Route path=\"/contact\" exact component={Contact} />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = state => {\n  return ({\n    appSections: state.appSections\n  })\n}\n\nexport default connect(\n  mapStateToProps, {fetchAppSections}\n)(App);\n","import { combineReducers } from 'redux';\n\nimport experienceReducer from './experienceReducer';\nimport skillsReducer from './skillsReducer';\nimport appSectionsReducer from './appSectionsReducer';\n\nexport default combineReducers({\n  experience: experienceReducer,\n  skills: skillsReducer,\n  appSections: appSectionsReducer\n});\n","import {\n  FETCH_RESUME_EXPERIENCE\n} from '../actions/types';\n\nexport default (state = null, action) => {\n  switch(action.type) {\n    case FETCH_RESUME_EXPERIENCE:\n      // action.payload = {\"experience\": \"data\"}\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_RESUME_SKILLS\n} from '../actions/types';\n\nexport default (state = null, action) => {\n  switch(action.type) {\n    case FETCH_RESUME_SKILLS:\n      // action.payload = {\"experience\": \"data\"}\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_APP_SECTIONS,\n  FETCH_APP_SECTION\n} from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch(action.type) {\n    case FETCH_APP_SECTIONS:\n      return action.payload;\n    case FETCH_APP_SECTION:\n      return {...state, ...action.payload};\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}